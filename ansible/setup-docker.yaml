---
- name: docker prepare phase
  become: true
  hosts: docker-mock
  serial: 1
  vars:
     docker_edition: "ce"
     docker_channel: ["stable"]
     docker_version: ""
     docker_state: "present"
     docker_gpg_key: "https://download.docker.com/linux/debian/gpg"
     docker_stable_url: "https://download.docker.com/linux/debian"
     docker_package_dependencies:
        - "apt-transport-https"
        - "ca-certificates"
        - "cron"
        - "gnupg2"
        - "software-properties-common"
     docker_pip_dependencies:
        - "python-setuptools"
        - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pip"
     docker_apt_key_id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
     docker_apt_key_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
     docker_apt_repository: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_channel | join (' ') }}"

  tasks:
    - name: Update host package index.
      apt:
        upgrade: yes
        update_cache: yes

    - name: Allow repository access  over HTTPS.
      apt:
        name: "{{ docker_package_dependencies + docker_pip_dependencies }}"

    - name: Add offical Docker GPG key.
      apt_key:
        id: "{{ docker_apt_key_id }}"
        url: "{{ docker_apt_key_url }}"

    - name: Setup stable docker repository.
      apt_repository:
         repo: "{{ docker_apt_repository }}"
         update_cache: true


- name: docker installation phase
  hosts: docker-mock
  serial: 1
  vars:
    docker_verify: "docker run hello-world"
    docker_stable_url: "https://download.docker.com/linux/debian"

  tasks:
    - name: Update package index.
      debug:
        msg: "Update package index on: {{ inventory_hostname }}"

    - name: Install docker.
      debug:
        msg: "Install {{ docker_stable_url }} on: {{ inventory_hostname }}"

- name: docker post phase
  hosts: docker-mock
  serial: 1
  vars:
    docker_group: docker
    docker_users: "ansible"

  tasks:
    - name: Add docker group.
      debug:
        msg: "Add group: {{ docker_group }} on: {{ inventory_hostname }}"

    - name: Add users to docker group.
      debug:
        msg: "Add users: {{ docker_users }} to: {{ docker_group}} on: {{ inventory_hostname }}"

    - name: Configure  docker start on boot.
      debug:
        msg: "Boot docker on: {{ inventory_hostname }}"




